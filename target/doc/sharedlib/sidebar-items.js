initSidebarItems({"enum":[["SharedlibError",""]],"mod":[["error",""]],"struct":[["Data","A pointer to shared data which uses a bound lifetime to avoid outliving its library."],["DataTracked","A pointer to shared data which allows a user-provided ref-counting implementation to avoid outliving its library."],["Func","A pointer to a shared function which uses a bound lifetime to avoid outliving its library."],["FuncTracked","A pointer to a shared function which allows a user-provided ref-counting implementation to avoid outliving its library."],["Lib","A shared library which uses bound lifetimes to track its Symbols."],["LibTracked","A shared library which which allows a user-provided ref-counting implementation to track its Symbols."],["LibUnsafe","A shared library which does not track its Symbols."]],"trait":[["Symbol","A symbol from a shared library."]],"type":[["DataArc","A pointer to shared data which uses atomic ref-counting to avoid outliving its library."],["DataRc","A pointer to shared data which uses non-atomic ref-counting to avoid outliving its library."],["DataUnsafe","A pointer to shared data which provides no protection against outliving its library."],["FuncArc","A pointer to a shared function which uses atomic ref-counting to avoid outliving its library."],["FuncRc","A pointer to a shared function which uses non-atomic ref-counting to avoid outliving its library."],["FuncUnsafe","A pointer to a shared function which provides no protection against outliving its library."],["LibArc","A shared library which uses atomic ref-counting to track its Symbols."],["LibRc","A shared library which uses non-atomic ref-counting to track its Symbols."],["SharedlibResult",""]]});